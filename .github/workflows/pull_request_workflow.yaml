name: Pull Request Workflow

concurrency:
  group: pull_request-${{ github.head_ref }}
  cancel-in-progress: true

on:
  pull_request:
    paths:
      - 'apps/**'
      - 'packages/**'

jobs:
  determine-changes:
    name: Determine Changed Projects
    runs-on: ubuntu-latest
    outputs:
      projects: ${{ steps.set-changes.outputs.projects }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all commits to ensure the base commit is available

      - name: Get changed projects and dependencies
        id: set-changes
        run: |
          # Define a dependency map
          declare -A dependency_map
          dependency_map["packages/naive_cross_word"]="apps/teka_teki_tiku"
          dependency_map["packages/teka_tecore"]="apps/teka_teki_tiku apps/kakiku_admin"
          dependency_map["packages/teka_tekit"]="apps/kakiku_admin"

          # Identify changed projects
          changed_projects=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }} \
            | grep -E '^(apps|packages)/' | cut -d'/' -f1-2 | sort | uniq)

          # Include dependent projects
          affected_projects=""
          for project in $changed_projects; do
            affected_projects+="$project "
            if [[ -v dependency_map[$project] ]]; then
              affected_projects+="${dependency_map[$project]} "
            fi
          done

          # Set output
          affected_projects_json=$(echo $affected_projects | tr ' ' '\n' | sort | uniq | jq -R -s -c 'split("\n")[:-1]')
          echo "::set-output name=projects::$affected_projects_json"

      - name: Debug Output
        run: |
          echo "Affected Projects: ${{ steps.set-changes.outputs.projects }}"

  build:
    needs: determine-changes
    if: needs.determine-changes.outputs.projects != '[]' # Skip if no projects are changed
    strategy:
      matrix:
        project: ${{ fromJson(needs.determine-changes.outputs.projects) }}
    uses: VeryGoodOpenSource/very_good_workflows/.github/workflows/flutter_package.yml@v1
    with:
      flutter_channel: stable
      working_directory: ${{ matrix.project }}
      format_line_length: '160'
      flutter_version: '3.19.6'
      min_coverage: 60
  coverage_report:
    name: Generate coverage report
    needs: [build, determine-changes]
    runs-on: ubuntu-latest
    steps:
    - name: Setup LCOV
      uses: hrishikesh-kadam/setup-lcov@v1
    - name: Report code coverage
      uses: zgosalvez/github-actions-report-lcov@v3
      with:
        coverage-files: coverage/lcov.info
        minimum-coverage: 60
        artifact-name: code-coverage-report
        github-token: ${{ secrets.GITHUB_TOKEN }}
        working-directory: ${{ matrix.project }}
        update-comment: true

  comment-coverage:
    needs: [build, determine-changes]
    runs-on: ubuntu-latest
    steps:
      - name: Post Coverage to Pull Request
        uses: actions/github-script@v6
        with:
          script: |
            const rawProjects = '${{ needs.determine-changes.outputs.projects }}';
            // Ensure the output is not empty
            if (!rawProjects || rawProjects === '[]') {
              console.log('No affected projects. Skipping coverage comment.');
              return;
            }

            let affectedProjects;
            try {
              affectedProjects = JSON.parse(rawProjects);
            } catch (error) {
              throw new Error(`Failed to parse affected projects: ${error.message}`);
            }

            const coverageComment = `### ðŸ›  Code Coverage Results\n\n` +
              affectedProjects
                .map(project => `- **${project}**: ${project}/coverage/lcov.info`)
                .join("\n") +
              `\n\n_This comment was generated by a GitHub Action._`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: coverageComment
            });